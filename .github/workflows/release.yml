name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to release (leave empty for all)'
        required: false
        type: choice
        options:
          - 'all'
          - '@csp-kit/generator'
          - '@csp-kit/data'
          - '@csp-kit/cli'

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  packages: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
          # Use PAT if available for checkout to enable PR creation
          token: ${{ secrets.CHANGESET_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      # Configure npm authentication
      - name: Configure npm auth
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" >> ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Verify npm auth (optional, for debugging)
      - name: Verify npm authentication
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Create Release Pull Request or Publish to npm
      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm exec changeset publish --no-git-tag
          title: 'chore: version packages'
          commit: 'chore: version packages'
          createGithubReleases: true
          version: pnpm exec changeset version
        env:
          # Use PAT if available, otherwise fall back to GITHUB_TOKEN
          # PAT is required for creating pull requests
          GITHUB_TOKEN: ${{ secrets.CHANGESET_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: false

      # Manual release for specific package
      - name: Manual Package Release
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.package != 'all'
        run: |
          # Filter and publish specific package
          pnpm changeset publish --no-git-tag --filter="${{ github.event.inputs.package }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: false

      # Create tags after successful publish
      - name: Create Git Tags
        if: steps.changesets.outputs.published == 'true'
        run: |
          # Parse published packages and create tags
          echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | "\(.name)@\(.version)"' | while read -r tag; do
            git tag -a "$tag" -m "Release $tag"
            git push origin "$tag"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
